name: "deploy"
on:
  push:
    branches: [ main ]

jobs:
  deploy: 
    runs-on: ubuntu-latest
    name: "Deploy nextjs app to AWS S3"
    
    steps:
      - uses: actions/checkout@v2
          with:
            persist-credentials: false
      
      - name: use node.js v14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          check-latest: true
          registry-url: https://registry.npmjs.org/
      
      - name: npm install, build, and test
        run: |
          npm install
          npm run build 
          npm run test

      ################### Steps mentioned in this block would later be moved to the cloudâ€™s login action ####################### 
      - uses: actions/setup-node@v2
      - run: npm install @actions/core@1.6.0-beta.0 
      - uses: actions/github-script@v4
        id: idtoken
        with:
        # Audience field is optional. By default, the value is the repo's url. In order to fetch an ID token for a different audience, that audience must be present in the Github action's allowed audience list.
          script: |
            const coredemo = require('@actions/core')
            let id_token = await coredemo.getIDToken()   
            coredemo.setOutput('id_token', id_token)
      # Get credentials. Change --role-arn value to your role arn

      - name: Get temp credentials using id token. 
        run: |
          CREDENTIALS=$(aws sts assume-role-with-web-identity  --role-arn ${{ env.ROLE_ARN }} --role-session-name 'samplerolesession' --web-identity-token ${{ steps.idtoken.outputs.id_token }} --query Credentials)
          AID=$(echo $CREDENTIALS | jq -rc '.AccessKeyId')
          AKEY=$(echo $CREDENTIALS | jq -rc '.SecretAccessKey')
          STOKEN=$(echo $CREDENTIALS | jq -rc '.SessionToken')
          echo ::add-mask::$AID && echo ::add-mask::$AKEY && echo ::add-mask::$STOKEN
          echo ::set-output name=ACCESSID::$AID && echo ::set-output name=ACCESSKEY::$AKEY && echo ::set-output name=SESSIONTOKEN::$STOKEN
        id: credentials  
       
       ###########################################################################################################
           
      # Runs a set of commands using the runners shell
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ steps.credentials.outputs.ACCESSID }}
          aws-secret-access-key: ${{ steps.credentials.outputs.ACCESSKEY }}
          aws-session-token: ${{ steps.credentials.outputs.SESSIONTOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
           
      - name: Uploading files to s3
        run: aws s3 sync ./next s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ 

      - name: setting index and error files
        run: aws s3 website s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ --index-document index.html --error-document 404.html

      # - run:  echo "Web app is installed and you can access here http://${{ secrets.AWS_S3_BUCKET_NAME }}.s3-website. ${{ secrets.AWS_REGION }}.amazonaws.com"
